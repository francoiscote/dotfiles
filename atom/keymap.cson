# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson


# Tree View = F1
# Linter Panel = F3
# Minimap toggle = F5
'.platform-linux':
  'f1': 'tree-view:toggle'
  'f4': 'linter:togglePanel'
  'f5': 'minimap:toggle'

'body':
# Panes Focus
  'ctrl-alt-shift-cmd-up': 'window:focus-pane-above'
  'ctrl-alt-shift-cmd-left': 'window:focus-pane-on-left'
  'ctrl-alt-shift-cmd-right': 'window:focus-pane-on-right'
  'ctrl-alt-shift-cmd-down': 'window:focus-pane-below'

# Panes Split
  'ctrl-alt-shift-cmd-j': 'pane:split-down-moving-current-tab'
  'ctrl-alt-shift-cmd-h': 'pane:split-left-moving-current-tab'
  'ctrl-alt-shift-cmd-l': 'pane:split-right-moving-current-tab'
  'ctrl-alt-shift-cmd-k': 'pane:split-up-moving-current-tab'

'atom-workspace':
  'ctrl-alt-shift-cmd-delete': 'move-panes:move-left'
  'ctrl-alt-shift-cmd-pagedown': 'move-panes:move-right'
  'ctrl-alt-shift-cmd-home': 'move-panes:move-up'
  'ctrl-alt-shift-cmd-end': 'move-panes:move-down'

# Lazy Motion
'atom-text-editor':
  'cmd-e': 'lazy-motion:forward'
  'cmd-shift-e': 'lazy-motion:backward'
'atom-text-editor.lazy-motion':
  'cmd-e': 'lazy-motion:forward'
  'cmd-shift-e': 'lazy-motion:backward'

# Unset Emmet Reflect Css Values
# (conflicts with toggle Project Symbols)
'atom-text-editor:not([mini])':
    'cmd-shift-r': 'unset!'
