# make tmux display things in 256 colors
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ',xterm-256color:RGB'

set -g display-time 0

# Change prefix
unbind C-b
#set -g prefix C-a
#bind C-a send-prefix
set -g prefix C-Space
bind C-Space send-prefix

# Change index start
set -g base-index 1
setw -g pane-base-index 1

# xterm keys
set-option -gw xterm-keys on

set -g mouse on
set -g status-keys vi
set -g history-limit 100000

# Use vim keybindings in copy mode
setw -g mode-keys vi

# enable activity alerts
setw -g monitor-activity off
set -g visual-activity off

# Automatically rename windows
set-option -g automatic-rename-format "#{s/zsh/‚ùØ shell:#{s/nvim/üíú nvim:#{pane_current_command}}}"

# ----------------------
# Selection & Copy/Paste
# ----------------------
# Setup 'y' and MouseDragEnd to Copy
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# Do not copy selection and cancel copy mode on drag end event
# Prefer iTerm style selection: select, then mouse click to copy to buffer
unbind -T copy-mode-vi MouseDragEnd1Pane
bind -T copy-mode-vi MouseDown1Pane select-pane \;\
  send-keys -X copy-pipe "reattach-to-user-namespace pbcopy" \;\
  send-keys -X clear-selection
# Update d efault binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# bind'p' to use pbpaste
#unbind p
#bind p run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# ----------------------
# SESSIONS
# ----------------------
# List Sessions, filter out attached sessions and 'scratch'
bind C-j display-popup -w 40 -h 30 -E "\
    tmux list-sessions -f '#{&&:#{?session_attached,0,1},#{!=:#S,scratch}}' -F '#S' |\
    sed '/^$/d' |\
    fzf --reverse --header jump-to-session |\
    xargs tmux switch-client -t"

# code project picker
bind C-p display-popup -E "ta ~/Code"

# dotfiles session
bind C-o new-session -A -s dotfiles -c ~/.dotfiles "nvim '+Telescope git_files'"

# Ranger
bind C-r display-popup -w 80% -E -d '#{pane_current_path}' "ranger"

# Scratchpad (open and detach)
bind C-i if-shell -F '#{==:#S,scratch}' {
		detach-client
	} {
		display-popup -w 80% -E "tmux new-session -A -s scratch -c '#{pane_current_path}'"
	}

# ----------------------
# WINDOWS
# ----------------------
# Use Alt-arrow to switch windows
bind -n M-Left  previous-window
bind -n M-Right next-window

# Reorder windows
bind -n M-C-Left swap-window -t -1
bind -n M-C-Right swap-window -t +1

# Make the current window the first window
bind -n M-Up swap-window -t 1

# ----------------------
# PANES
# ----------------------
# Split Panes using | and -
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'
unbind '"'
unbind %

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Kill Pane
bind x kill-pane

# ----------------------
# OTHER
# ----------------------
# No delay for escape key press
set -sg escape-time 0

# Reload tmux config
bind r source-file ~/.tmux.conf\; display "tmux.conf Reloaded"

# Restore <prefix>C-l to clear screen 
# (lost C-l binding because of vim-tmux-navigator above)
bind C-l send-keys 'C-l'


# ----------------------
# SPOTIFY PLUGIN
# ----------------------
# set -g @plugin 'robhurring/tmux-spotify'

# ----------------------
# THEME
# ----------------------

# PANES- highlight the active pane
set -g pane-border-style "fg=default"
set -g pane-active-border-style "fg=yellow"

# Messages
set -g message-style "fg=black,bg=red"

# STATUS POSITION
set-option -g status-position bottom

# STATUS CENTER
set -g status-justify centre
set -g status-style "fg=white,bg=default"

# STATUS: Window tab - Default
setw -g window-status-style "fg=brightblue,bg=default"
setw -g window-status-format "#{?window_zoomed_flag,#[fg=red],} #W #{?window_zoomed_flag,(Z) ,}"

# STATUS: Window tab - Activity & Bell
setw -g window-status-activity-style "fg=red"
setw -g window-status-bell-style "fg=red"

# STATUS: Window tab - Current
setw -g window-status-current-style "fg=brightblue,bg=default,reverse"
setw -g window-status-current-format "#{?window_zoomed_flag,#[fg=red],} #W #{?window_zoomed_flag,(Z) ,}"

# STATUS LEFT
set -g status-left-length 85
set -g status-left ""

# STATUS RIGHT
set -g status-right-length 90
set -g status-right "(#[bg=magenta,fg=default]#{?client_prefix,#{session_name},}#[bg=default]#[fg=magenta]#{?client_prefix,,#{session_name}}#[fg=default])"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
