# make tmux display things in 256 colors
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ',xterm-256color:RGB'

set -g display-time 0

# Change prefix for C-space
set -g prefix C-space
unbind C-b
bind C-space send-prefix

# Change index start
set -g base-index 1
set-window-option -g pane-base-index 1

# xterm keys
set-option -gw xterm-keys on

set -g status-keys vi
set -g history-limit 100000

# Use vim keybindings in copy mode
set-window-option -g mode-keys vi

# enable activity alerts
set-window-option -g monitor-activity off
set -g visual-activity off

# ----------------------
# Selection & Copy/Paste
# ----------------------
set-window-option -g mouse on

# Setup 'y' and MouseDragEnd to Copy
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# Do not copy selection and cancel copy mode on drag end event
# Prefer iTerm style selection: select, then mouse click to copy to buffer
unbind -T copy-mode-vi MouseDragEnd1Pane

# ----------------------
# SESSIONS
# ----------------------
# List Sessions, filter out attached sessions and 'scratch'
bind s display-popup -E -w 50% -h 50% "tmux-fzf-sessions"

# TmuxP project session picker
bind C-p display-popup -w 50% -h 50% -E "\
    tmuxp ls |\
    sed '/^$/d' |\
    fzf --reverse --header TMUXP |\
    xargs tmuxp load -y"

# dotfiles session
bind C-o new-session -A -s dotfiles -c ~/.dotfiles

# Ranger
bind C-r display-popup -w 80% -E -d '#{pane_current_path}' "ranger"

# Scratchpad (open and detach)
bind C-i if-shell -F '#{==:#S,scratch}' {
    detach-client
} {
    display-popup -w 80% -E "tmux new-session -A -s scratch -c '#{pane_current_path}'"
}

# ----------------------
# PANES
# ----------------------
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
bind-key -n "C-\\" if-shell "$is_vim" 'send-keys C-\\'  'select-pane -l'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Split Panes using | and -
unbind %
bind | split-window -h -c '#{pane_current_path}'
unbind '"'
bind - split-window -v -c '#{pane_current_path}'

# Kill Pane
bind x kill-pane

# Clear buffer
bind C-k send-keys -R \

# ----------------------
# WINDOWS
# ----------------------
# Opt+[j,k] to switch windows
bind -n M-j next-window
bind -n M-k previous-window

# Opt+[h,l] to reorder windows
bind -n M-h swap-window -t -1 \; previous-window
bind -n M-l swap-window -t +1 \; next-window

# ----------------------
# OTHER
# ----------------------
# No delay for escape key press
set -sg escape-time 0

# Reload tmux config
bind r source-file "~/.tmux.conf"

# ----------------------
# THEME
# ----------------------

# PANES- highlight the active pane
set -g pane-border-style "fg=default"
set -g pane-active-border-style "fg=yellow"

# Messages
set -g message-style "fg=black,bg=red"

# STATUS POSITION
set-option -g status-position bottom

# STATUS CENTER
set -g status-justify centre
set -g status-style "fg=white,bg=default"

# STATUS: Window tab - Default
setw -g window-status-style "fg=brightblue,bg=default"
setw -g window-status-format "#{?window_zoomed_flag,#[fg=red],} #W #{?window_zoomed_flag,(Z) ,}"

# STATUS: Window tab - Activity & Bell
setw -g window-status-activity-style "fg=red"
setw -g window-status-bell-style "fg=red"

# STATUS: Window tab - Current
setw -g window-status-current-style "fg=brightblue,bg=default,reverse"
setw -g window-status-current-format "#{?window_zoomed_flag,#[fg=red],} #W #{?window_zoomed_flag,(Z) ,}"

# STATUS LEFT
set -g status-left-length 85
set -g status-left "(#[bg=magenta,fg=default]#{?client_prefix,#{session_name},}#[bg=default]#[fg=magenta]#{?client_prefix,,#{session_name}}#[fg=default])"

# STATUS RIGHT
set -g status-right-length 90
set -g status-right ""
